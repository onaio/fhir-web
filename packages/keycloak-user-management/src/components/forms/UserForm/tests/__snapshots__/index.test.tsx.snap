// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/forms/UserForm edits user: readonly username edit 1`] = `
<input
  className="ant-input ant-input-disabled"
  disabled={true}
  id="username"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  type="text"
  value="opensrp"
/>
`;

exports[`components/forms/UserForm form validation works for contact field: contact input 1`] = `
<input
  className="ant-input"
  id="contact"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  type="text"
  value=""
/>
`;

exports[`components/forms/UserForm form validation works for contact field: contact label 1`] = `
<label
  className="ant-form-item-required"
  htmlFor="contact"
  title="Contact"
>
  Contact
</label>
`;

exports[`components/forms/UserForm renders correctly: email input 1`] = `
<input
  className="ant-input"
  id="email"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  type="text"
  value=""
/>
`;

exports[`components/forms/UserForm renders correctly: email label 1`] = `
<label
  className=""
  htmlFor="email"
  title="Email"
>
  Email
</label>
`;

exports[`components/forms/UserForm renders correctly: enabled input 1`] = `
Array [
  <input
    checked={false}
    className="ant-radio-input"
    name="enabled"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="radio"
    value={true}
  />,
  <input
    checked={true}
    className="ant-radio-input"
    name="enabled"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="radio"
    value={false}
  />,
]
`;

<<<<<<< HEAD
=======
exports[`components/forms/UserForm renders correctly: enabled label 1`] = `
Array [
  <label
    className=""
    htmlFor="enabled"
    title="Enable user"
  >
    Enable user
  </label>,
  <label
    className="ant-radio-wrapper"
  >
    <Checkbox
      checked={false}
      className=""
      defaultChecked={false}
      name="enabled"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      prefixCls="ant-radio"
      style={Object {}}
      type="radio"
      value={true}
    >
      <span
        className="ant-radio"
        style={Object {}}
      >
        <input
          checked={false}
          className="ant-radio-input"
          name="enabled"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="radio"
          value={true}
        />
        <span
          className="ant-radio-inner"
        />
      </span>
    </Checkbox>
    <span>
      Yes
    </span>
  </label>,
  <label
    className="ant-radio-wrapper ant-radio-wrapper-checked"
  >
    <Checkbox
      checked={true}
      className=""
      defaultChecked={false}
      name="enabled"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      prefixCls="ant-radio"
      style={Object {}}
      type="radio"
      value={false}
    >
      <span
        className="ant-radio ant-radio-checked"
        style={Object {}}
      >
        <input
          checked={true}
          className="ant-radio-input"
          name="enabled"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="radio"
          value={false}
        />
        <span
          className="ant-radio-inner"
        />
      </span>
    </Checkbox>
    <span>
      No
    </span>
  </label>,
]
`;

>>>>>>> Move extracting formValues and creating payload to util functions
exports[`components/forms/UserForm renders correctly: firstName input 1`] = `
<input
  className="ant-input"
  id="firstName"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  type="text"
  value=""
/>
`;

exports[`components/forms/UserForm renders correctly: firstName label 1`] = `
<label
  className="ant-form-item-required"
  htmlFor="firstName"
  title="First Name"
>
  First Name
</label>
`;

exports[`components/forms/UserForm renders correctly: lastName input 1`] = `
<input
  className="ant-input"
  id="lastName"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  type="text"
  value=""
/>
`;

exports[`components/forms/UserForm renders correctly: lastName label 1`] = `
<label
  className="ant-form-item-required"
  htmlFor="lastName"
  title="Last Name"
>
  Last Name
</label>
`;

exports[`components/forms/UserForm renders correctly: practitionerToggle input 1`] = `null`;

exports[`components/forms/UserForm renders correctly: practitionerToggle label 1`] = `null`;

exports[`components/forms/UserForm renders correctly: userGroups input 1`] = `null`;

exports[`components/forms/UserForm renders correctly: userGroups label 1`] = `
<label
  className=""
  htmlFor="userGroups"
  title="Group"
>
  Group
</label>
`;

exports[`components/forms/UserForm renders correctly: username input 1`] = `
<input
  className="ant-input"
  disabled={false}
  id="username"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  type="text"
  value=""
/>
`;

exports[`components/forms/UserForm renders correctly: username label 1`] = `
<label
  className="ant-form-item-required"
  htmlFor="username"
  title="Username"
>
  Username
</label>
`;

exports[`components/forms/UserForm show practitioner toggle when editing user and practitioner is null: practitionerToggle 1`] = `
Object {
  "children": <Memo
    name="active"
  >
    <Radio
      disabled={false}
      name="active"
      type="radio"
      value={true}
    >
      Yes
    </Radio>
    <Radio
      disabled={false}
      name="active"
      type="radio"
      value={false}
    >
      No
    </Radio>
  </Memo>,
  "id": "practitionerToggle",
  "label": "Mark as Practitioner",
  "name": "active",
}
`;

exports[`components/forms/UserForm show practitioner toggle when editing user and practitioner is provided: practitionerToggle 1`] = `
Object {
  "children": <Memo
    name="active"
  >
    <Radio
      disabled={false}
      name="active"
      type="radio"
      value={true}
    >
      Yes
    </Radio>
    <Radio
      disabled={false}
      name="active"
      type="radio"
      value={false}
    >
      No
    </Radio>
  </Memo>,
  "id": "practitionerToggle",
  "label": "Mark as Practitioner",
  "name": "active",
}
`;

exports[`components/forms/UserForm user is not edited if api is down: readonly username edit 1`] = `
<input
  className="ant-input ant-input-disabled"
  disabled={true}
  id="username"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  type="text"
  value="opensrp"
/>
`;
