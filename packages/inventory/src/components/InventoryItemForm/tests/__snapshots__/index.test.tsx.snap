// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/InventoryItemForm renders correctly: card 1`] = `
Object {
  "children": <ForwardRef(InternalForm)
    form={
      Object {
        "__INTERNAL__": Object {
          "itemRef": [Function],
          "name": undefined,
        },
        "getFieldError": [Function],
        "getFieldInstance": [Function],
        "getFieldValue": [Function],
        "getFieldsError": [Function],
        "getFieldsValue": [Function],
        "getInternalHooks": [Function],
        "isFieldTouched": [Function],
        "isFieldValidating": [Function],
        "isFieldsTouched": [Function],
        "isFieldsValidating": [Function],
        "resetFields": [Function],
        "scrollToField": [Function],
        "setFields": [Function],
        "setFieldsValue": [Function],
        "submit": [Function],
        "validateFields": [Function],
      }
    }
    initialValues={
      Object {
        "accountabilityEndDate": null,
        "deliveryDate": null,
        "donor": undefined,
        "poNumber": "",
        "productName": undefined,
        "quantity": "",
        "unicefSection": undefined,
      }
    }
    labelCol={
      Object {
        "lg": Object {
          "offset": 0,
          "span": 6,
        },
        "md": Object {
          "offset": 0,
          "span": 8,
        },
        "sm": Object {
          "offset": 2,
          "span": 10,
        },
        "xs": Object {
          "offset": 0,
          "span": 16,
        },
      }
    }
    onFinish={[Function]}
    wrapperCol={
      Object {
        "lg": Object {
          "span": 10,
        },
        "md": Object {
          "span": 12,
        },
        "sm": Object {
          "span": 14,
        },
        "xs": Object {
          "span": 24,
        },
      }
    }
  >
    <FormItem
      id="productName"
      label="Product"
      name="productName"
      rules={
        Array [
          Object {
            "message": "Product is required",
            "required": true,
          },
        ]
      }
    >
      <Select
        disabled={false}
        onChange={[Function]}
        placeholder="Select"
      >
        <Option
          value="Test optional Fields"
        >
          Test optional Fields
        </Option>
        <Option
          value="Scale"
        >
          Scale
        </Option>
        <Option
          value="Scale Kit test"
        >
          Scale Kit test
        </Option>
        <Option
          value="Motorbyke"
        >
          Motorbyke
        </Option>
      </Select>
    </FormItem>
    <FormItem
      id="quantity"
      label="Quantity (optional)"
      name="quantity"
    >
      <Input
        type="text"
      />
    </FormItem>
    <FormItem
      id="deliveryDate"
      label="Delivery date"
      name="deliveryDate"
      rules={
        Array [
          Object {
            "message": "Delivery date is required",
            "required": true,
          },
        ]
      }
    >
      <DatePicker
        disabledDate={[Function]}
        onChange={[Function]}
      />
    </FormItem>
    <FormItem
      id="accountabilityEndDate"
      label="Accountability end date"
      name="accountabilityEndDate"
      rules={
        Array [
          Object {
            "message": "Accountability end date is required",
            "required": true,
          },
        ]
      }
    >
      <DatePicker
        disabledDate={[Function]}
      />
    </FormItem>
    <FormItem
      id="unicefSection"
      label="UNICEF section"
      name="unicefSection"
      rules={
        Array [
          Object {
            "message": "UNICEF section is required",
            "required": true,
          },
        ]
      }
    >
      <Select
        placeholder="Select"
      >
        <Option
          value="Health"
        >
          Health
        </Option>
        <Option
          value="WASH"
        >
          WASH
        </Option>
        <Option
          value="Nutrition"
        >
          Nutrition
        </Option>
      </Select>
    </FormItem>
    <FormItem
      id="donor"
      label="Donor (optional)"
      name="donor"
    >
      <Select
        placeholder="Select"
      >
        <Option
          value="ADB"
        >
          ADB
        </Option>
        <Option
          value="NatCom Belgium"
        >
          NatCom Belgium
        </Option>
      </Select>
    </FormItem>
    <FormItem
      id="poNumber"
      label="PO number"
      name="poNumber"
      rules={
        Array [
          Object {
            "message": "PO number is required",
            "required": true,
          },
        ]
      }
    >
      <Input
        type="text"
      />
    </FormItem>
    <FormItem
      wrapperCol={
        Object {
          "lg": Object {
            "offset": 6,
            "span": 14,
          },
          "md": Object {
            "offset": 8,
            "span": 16,
          },
          "sm": Object {
            "offset": 12,
            "span": 24,
          },
          "xs": Object {
            "offset": 0,
            "span": 16,
          },
        }
      }
    >
      <Button
        block={false}
        ghost={false}
        htmlType="submit"
        loading={false}
        type="primary"
      >
        Save
      </Button>
      <Button
        block={false}
        ghost={false}
        htmlType="button"
        loading={false}
        onClick={[Function]}
      >
        Cancel
      </Button>
    </FormItem>
  </ForwardRef(InternalForm)>,
}
`;
