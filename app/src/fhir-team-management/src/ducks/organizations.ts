/** Organizations redux module */
import {
  fetchActionCreatorFactory,
  removeActionCreatorFactory,
  setTotalRecordsFactory,
  reducerFactory,
  getItemsByIdFactory,
  getItemsArrayFactory,
  getItemByIdFactory,
  getTotalRecordsFactory,
} from '@opensrp/reducer-factory';

/** The reducer name */
export const reducerName = 'organizations';

/** interface for Organizations coding property */

interface identifier<T extends { id: string }> {
  use: 'official'; //--- use as is
  value: T['id']; //--- autogenerated uuid should be the same as the id
}

/** interface for a Organization object */
export interface Organization {
  resourceType: 'Organization'; //--- use as is
  id: string;
  identifier: identifier<Organization>[];
  name: string; //--- team name
  active: boolean; //--- team active status
}

export interface FHIRResponse<T extends { resourceType: string; id: string }> {
  resourceType: string;
  id: string;
  meta: { lastUpdated: string };
  type: string;
  total: number;
  link: [{ relation: string; url: string }];
  entry: {
    fullUrl: string;
    resource: T & {
      resourceType: string;
      id: string; //--- autogenerated uuid
      meta: { versionId: string; lastUpdated: string; source: string };
      identifier: identifier<T>[];
    };
    search: { mode: string };
  }[];
}

// action interfaces

/** Item Reducer */
export const reducer = reducerFactory<Organization>(reducerName);

// actions
/** actionCreator returns action to add Item records to store */
export const fetchOrganizationsAction = fetchActionCreatorFactory<Organization>(reducerName, 'id');
export const removeOrganizationsAction = removeActionCreatorFactory(reducerName);
export const setTotalOrganizationsAction = setTotalRecordsFactory(reducerName);

// selectors
export const getOrganizationsById = getItemsByIdFactory<Organization>(reducerName);
export const getOrganizationById = getItemByIdFactory<Organization>(reducerName);
export const getOrganizationsArray = getItemsArrayFactory<Organization>(reducerName);
export const getTotalOrganizations = getTotalRecordsFactory(reducerName);
